{"ast":null,"code":"var _jsxFileName = \"/Users/suprimpoudel/WebstormProjects/bus_buddy_web/src/scenes/add_update_route/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { TextField, FormControl, InputLabel, Select, MenuItem, Button, Box } from '@mui/material';\nimport { allPlaceEndPoint } from \"../../data/apiConstants\";\nimport { useParams } from \"react-router-dom\";\n\nfunction AddUpdateRoute() {\n  let {\n    id\n  } = useParams();\n  const [places, setPlaces] = useState([]);\n  const [initialValues, setInitialValues] = useState({\n    name: '',\n    startDestination: '',\n    endDestination: ''\n  });\n  useEffect(() => {\n    // Fetch the list of places using Axios and populate the places state\n    axios.get(allPlaceEndPoint).then(response => {\n      setPlaces(response.data.result);\n    }).catch(error => {\n      console.error('Error fetching places:', error);\n    });\n  }, []);\n  const validationSchema = yup.object().shape({\n    name: yup.string().required('Name is required'),\n    startDestination: yup.string().notOneOf([yup.ref('endDestination')], 'Start and end destinations cannot be the same').required('Start Destination is required'),\n    endDestination: yup.string().required('End Destination is required')\n  });\n  return /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Add or Update Route\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      // Handle form submission, e.g., make a POST request to your API\n      console.log('Submitted values:', values); // Reset the form after submission\n\n      resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    name: \"name\",\n    label: \"Name\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"name\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"startDestination-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Start Destination\"), /*#__PURE__*/React.createElement(Field, {\n    as: Select,\n    labelId: \"startDestination-label\",\n    label: \"Start Destination\",\n    id: \"startDestination\",\n    name: \"startDestination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, \"Select a start destination\")), places.map(place => /*#__PURE__*/React.createElement(MenuItem, {\n    key: place.id,\n    value: place.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  }, place.name)))), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"startDestination\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"endDestination-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"End Destination\"), /*#__PURE__*/React.createElement(Field, {\n    as: Select,\n    labelId: \"endDestination-label\",\n    label: \"End Destination\",\n    id: \"endDestination\",\n    name: \"endDestination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, \"Select an end destination\")), places.map(place => /*#__PURE__*/React.createElement(MenuItem, {\n    key: place.id,\n    value: place.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, place.name)))), /*#__PURE__*/React.createElement(ErrorMessage, {\n    name: \"endDestination\",\n    component: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    justifyContent: \"end\",\n    mt: \"20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"secondary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, id == null ? \"Create New Place\" : \"Update Place\")))));\n}\n\nexport default AddUpdateRoute;","map":{"version":3,"names":["React","useState","useEffect","Formik","Field","Form","ErrorMessage","axios","yup","TextField","FormControl","InputLabel","Select","MenuItem","Button","Box","allPlaceEndPoint","useParams","AddUpdateRoute","id","places","setPlaces","initialValues","setInitialValues","name","startDestination","endDestination","get","then","response","data","result","catch","error","console","validationSchema","object","shape","string","required","notOneOf","ref","values","resetForm","log","map","place"],"sources":["/Users/suprimpoudel/WebstormProjects/bus_buddy_web/src/scenes/add_update_route/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport {\n    TextField,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n    Button,\n    Box,\n} from '@mui/material';\nimport {allPlaceEndPoint} from \"../../data/apiConstants\";\nimport {useParams} from \"react-router-dom\";\n\nfunction AddUpdateRoute() {\n    let {id} = useParams();\n    const [places, setPlaces] = useState([]);\n    const [initialValues, setInitialValues] = useState({\n        name: '',\n        startDestination: '',\n        endDestination: '',\n    });\n\n    useEffect(() => {\n        // Fetch the list of places using Axios and populate the places state\n        axios\n            .get(allPlaceEndPoint)\n            .then((response) => {\n                setPlaces(response.data.result);\n            })\n            .catch((error) => {\n                console.error('Error fetching places:', error);\n            });\n\n    }, []);\n\n    const validationSchema = yup.object().shape({\n        name: yup.string().required('Name is required'),\n        startDestination: yup.string()\n            .notOneOf(\n                [yup.ref('endDestination')],\n                'Start and end destinations cannot be the same'\n            )\n            .required('Start Destination is required'),\n        endDestination: yup.string().required('End Destination is required'),\n    });\n\n    return (\n        <Box p={2}>\n            <h1>Add or Update Route</h1>\n            <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(values, { resetForm }) => {\n                    // Handle form submission, e.g., make a POST request to your API\n                    console.log('Submitted values:', values);\n                    // Reset the form after submission\n                    resetForm();\n                }}\n            >\n                <Form>\n                    <Box mt={2}>\n                        <TextField\n                            id=\"name\"\n                            name=\"name\"\n                            label=\"Name\"\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                        <ErrorMessage name=\"name\" component=\"div\" />\n                    </Box>\n\n                    <Box mt={2}>\n                        <FormControl variant=\"outlined\" fullWidth>\n                            <InputLabel id=\"startDestination-label\">Start Destination</InputLabel>\n                            <Field\n                                as={Select}\n                                labelId=\"startDestination-label\"\n                                label=\"Start Destination\"\n                                id=\"startDestination\"\n                                name=\"startDestination\"\n                            >\n                                <MenuItem value=\"\">\n                                    <em>Select a start destination</em>\n                                </MenuItem>\n                                {places.map((place) => (\n                                    <MenuItem key={place.id} value={place.id}>\n                                        {place.name}\n                                    </MenuItem>\n                                ))}\n                            </Field>\n                        </FormControl>\n                        <ErrorMessage name=\"startDestination\" component=\"div\" />\n                    </Box>\n\n                    <Box mt={2}>\n                        <FormControl variant=\"outlined\" fullWidth>\n                            <InputLabel id=\"endDestination-label\">End Destination</InputLabel>\n                            <Field\n                                as={Select}\n                                labelId=\"endDestination-label\"\n                                label=\"End Destination\"\n                                id=\"endDestination\"\n                                name=\"endDestination\"\n                            >\n                                <MenuItem value=\"\">\n                                    <em>Select an end destination</em>\n                                </MenuItem>\n                                {places.map((place) => (\n                                    <MenuItem key={place.id} value={place.id}>\n                                        {place.name}\n                                    </MenuItem>\n                                ))}\n                            </Field>\n                        </FormControl>\n                        <ErrorMessage name=\"endDestination\" component=\"div\" />\n                    </Box>\n\n                    <Box display=\"flex\" justifyContent=\"end\" mt=\"20px\">\n\n                        <Button type=\"submit\" color=\"secondary\" variant=\"contained\">\n                            {id == null ? \"Create New Place\" : \"Update Place\"}\n                        </Button>\n                    </Box>\n                </Form>\n            </Formik>\n        </Box>\n    );\n}\n\nexport default AddUpdateRoute;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}