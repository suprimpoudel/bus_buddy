{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { scaleBand, scalePoint } from 'd3-scale';\nimport PropTypes from 'prop-types';\nimport { getExtremumX as getBarExtremumX, getExtremumY as getBarExtremumY } from '../BarChart/extremums';\nimport { getExtremumX as getScatterExtremumX, getExtremumY as getScatterExtremumY } from '../ScatterChart/extremums';\nimport { getExtremumX as getLineExtremumX, getExtremumY as getLineExtremumY } from '../LineChart/extremums';\nimport { isBandScaleConfig, isPointScaleConfig } from '../models/axis';\nimport { getScale } from '../internals/getScale';\nimport { DrawingContext } from './DrawingProvider';\nimport { SeriesContext } from './SeriesContextProvider';\nimport { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\nimport { getTicksNumber } from '../hooks/useTicks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nconst DEFAULT_BAR_GAP_RATIO = 0.1; // TODO: those might be better placed in a distinct file\n\nconst xExtremumGetters = {\n  bar: getBarExtremumX,\n  scatter: getScatterExtremumX,\n  line: getLineExtremumX\n};\nconst yExtremumGetters = {\n  bar: getBarExtremumY,\n  scatter: getScatterExtremumY,\n  line: getLineExtremumY\n};\nexport const CartesianContext = /*#__PURE__*/React.createContext({\n  xAxis: {},\n  yAxis: {},\n  xAxisIds: [],\n  yAxisIds: []\n});\n\nfunction CartesianContextProvider({\n  xAxis: inXAxis,\n  yAxis: inYAxis,\n  dataset,\n  children\n}) {\n  const formattedSeries = React.useContext(SeriesContext);\n  const drawingArea = React.useContext(DrawingContext);\n  const xAxis = React.useMemo(() => inXAxis == null ? void 0 : inXAxis.map(axisConfig => {\n    const dataKey = axisConfig.dataKey;\n\n    if (dataKey === undefined || axisConfig.data !== undefined) {\n      return axisConfig;\n    }\n\n    if (dataset === undefined) {\n      throw Error('MUI: x-axis uses `dataKey` but no `dataset` is provided.');\n    }\n\n    return _extends({}, axisConfig, {\n      data: dataset.map(d => d[dataKey])\n    });\n  }), [inXAxis, dataset]);\n  const yAxis = React.useMemo(() => inYAxis == null ? void 0 : inYAxis.map(axisConfig => {\n    const dataKey = axisConfig.dataKey;\n\n    if (dataKey === undefined || axisConfig.data !== undefined) {\n      return axisConfig;\n    }\n\n    if (dataset === undefined) {\n      throw Error('MUI: y-axis uses `dataKey` but no `dataset` is provided.');\n    }\n\n    return _extends({}, axisConfig, {\n      data: dataset.map(d => d[dataKey])\n    });\n  }), [inYAxis, dataset]);\n  const value = React.useMemo(() => {\n    var _xAxis$map, _yAxis$map;\n\n    const axisExtremumCallback = (acc, chartType, axis, getters, isDefaultAxis) => {\n      var _ref, _formattedSeries$char;\n\n      const getter = getters[chartType];\n      const series = (_ref = (_formattedSeries$char = formattedSeries[chartType]) == null ? void 0 : _formattedSeries$char.series) != null ? _ref : {};\n      const [minChartTypeData, maxChartTypeData] = getter({\n        series,\n        axis,\n        isDefaultAxis\n      });\n      const [minData, maxData] = acc;\n\n      if (minData === null || maxData === null) {\n        return [minChartTypeData, maxChartTypeData];\n      }\n\n      if (minChartTypeData === null || maxChartTypeData === null) {\n        return [minData, maxData];\n      }\n\n      return [Math.min(minChartTypeData, minData), Math.max(maxChartTypeData, maxData)];\n    };\n\n    const getAxisExtremum = (axis, getters, isDefaultAxis) => {\n      const charTypes = Object.keys(getters);\n      return charTypes.reduce((acc, charType) => axisExtremumCallback(acc, charType, axis, getters, isDefaultAxis), [null, null]);\n    };\n\n    const allXAxis = [...((_xAxis$map = xAxis == null ? void 0 : xAxis.map((axis, index) => _extends({\n      id: `deaultized-x-axis-${index}`\n    }, axis))) != null ? _xAxis$map : []), // Allows to specify an axis with id=DEFAULT_X_AXIS_KEY\n    ...(xAxis === undefined || xAxis.findIndex(({\n      id\n    }) => id === DEFAULT_X_AXIS_KEY) === -1 ? [{\n      id: DEFAULT_X_AXIS_KEY,\n      scaleType: 'linear'\n    }] : [])];\n    const completedXAxis = {};\n    allXAxis.forEach((axis, axisIndex) => {\n      var _axis$scaleType, _axis$min, _axis$max, _axis$min2, _axis$max2;\n\n      const isDefaultAxis = axisIndex === 0;\n      const [minData, maxData] = getAxisExtremum(axis, xExtremumGetters, isDefaultAxis);\n      const range = [drawingArea.left, drawingArea.left + drawingArea.width];\n\n      if (isBandScaleConfig(axis)) {\n        var _axis$categoryGapRati, _axis$barGapRatio;\n\n        const categoryGapRatio = (_axis$categoryGapRati = axis.categoryGapRatio) != null ? _axis$categoryGapRati : DEFAULT_CATEGORY_GAP_RATIO;\n        const barGapRatio = (_axis$barGapRatio = axis.barGapRatio) != null ? _axis$barGapRatio : DEFAULT_BAR_GAP_RATIO;\n        completedXAxis[axis.id] = _extends({\n          categoryGapRatio,\n          barGapRatio\n        }, axis, {\n          scale: scaleBand(axis.data, range).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n          ticksNumber: axis.data.length\n        });\n      }\n\n      if (isPointScaleConfig(axis)) {\n        completedXAxis[axis.id] = _extends({}, axis, {\n          scale: scalePoint(axis.data, range),\n          ticksNumber: axis.data.length\n        });\n      }\n\n      if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n        // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n        return;\n      }\n\n      const scaleType = (_axis$scaleType = axis.scaleType) != null ? _axis$scaleType : 'linear';\n      const extremums = [(_axis$min = axis.min) != null ? _axis$min : minData, (_axis$max = axis.max) != null ? _axis$max : maxData];\n      const ticksNumber = getTicksNumber(_extends({}, axis, {\n        range,\n        domain: extremums\n      }));\n      const niceScale = getScale(scaleType, extremums, range).nice(ticksNumber);\n      const niceDomain = niceScale.domain();\n      const domain = [(_axis$min2 = axis.min) != null ? _axis$min2 : niceDomain[0], (_axis$max2 = axis.max) != null ? _axis$max2 : niceDomain[1]];\n      completedXAxis[axis.id] = _extends({}, axis, {\n        scaleType,\n        scale: niceScale.domain(domain),\n        ticksNumber\n      });\n    });\n    const allYAxis = [...((_yAxis$map = yAxis == null ? void 0 : yAxis.map((axis, index) => _extends({\n      id: `deaultized-y-axis-${index}`\n    }, axis))) != null ? _yAxis$map : []), ...(yAxis === undefined || yAxis.findIndex(({\n      id\n    }) => id === DEFAULT_Y_AXIS_KEY) === -1 ? [{\n      id: DEFAULT_Y_AXIS_KEY,\n      scaleType: 'linear'\n    }] : [])];\n    const completedYAxis = {};\n    allYAxis.forEach((axis, axisIndex) => {\n      var _axis$scaleType2, _axis$min3, _axis$max3, _axis$min4, _axis$max4;\n\n      const isDefaultAxis = axisIndex === 0;\n      const [minData, maxData] = getAxisExtremum(axis, yExtremumGetters, isDefaultAxis);\n      const range = [drawingArea.top + drawingArea.height, drawingArea.top];\n\n      if (isBandScaleConfig(axis)) {\n        var _axis$categoryGapRati2;\n\n        const categoryGapRatio = (_axis$categoryGapRati2 = axis.categoryGapRatio) != null ? _axis$categoryGapRati2 : DEFAULT_CATEGORY_GAP_RATIO;\n        completedYAxis[axis.id] = _extends({\n          categoryGapRatio,\n          barGapRatio: 0\n        }, axis, {\n          scale: scaleBand(axis.data, [range[1], range[0]]).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n          ticksNumber: axis.data.length\n        });\n      }\n\n      if (isPointScaleConfig(axis)) {\n        completedYAxis[axis.id] = _extends({}, axis, {\n          scale: scalePoint(axis.data, [range[1], range[0]]),\n          ticksNumber: axis.data.length\n        });\n      }\n\n      if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n        // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n        return;\n      }\n\n      const scaleType = (_axis$scaleType2 = axis.scaleType) != null ? _axis$scaleType2 : 'linear';\n      const extremums = [(_axis$min3 = axis.min) != null ? _axis$min3 : minData, (_axis$max3 = axis.max) != null ? _axis$max3 : maxData];\n      const ticksNumber = getTicksNumber(_extends({}, axis, {\n        range,\n        domain: extremums\n      }));\n      const niceScale = getScale(scaleType, extremums, range).nice(ticksNumber);\n      const niceDomain = niceScale.domain();\n      const domain = [(_axis$min4 = axis.min) != null ? _axis$min4 : niceDomain[0], (_axis$max4 = axis.max) != null ? _axis$max4 : niceDomain[1]];\n      completedYAxis[axis.id] = _extends({}, axis, {\n        scaleType,\n        scale: niceScale.domain(domain),\n        ticksNumber\n      });\n    });\n    return {\n      xAxis: completedXAxis,\n      yAxis: completedYAxis,\n      xAxisIds: allXAxis.map(({\n        id\n      }) => id),\n      yAxisIds: allYAxis.map(({\n        id\n      }) => id)\n    };\n  }, [drawingArea.height, drawingArea.left, drawingArea.top, drawingArea.width, formattedSeries, xAxis, yAxis]); // @ts-ignore\n\n  return /*#__PURE__*/_jsx(CartesianContext.Provider, {\n    value: value,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CartesianContextProvider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  dataset: PropTypes.arrayOf(PropTypes.object),\n  xAxis: PropTypes.arrayOf(PropTypes.shape({\n    axisId: PropTypes.string,\n    classes: PropTypes.object,\n    data: PropTypes.array,\n    dataKey: PropTypes.string,\n    disableLine: PropTypes.bool,\n    disableTicks: PropTypes.bool,\n    fill: PropTypes.string,\n    hideTooltip: PropTypes.bool,\n    id: PropTypes.string,\n    label: PropTypes.string,\n    labelFontSize: PropTypes.number,\n    max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    position: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n    scaleType: PropTypes.oneOf(['band', 'linear', 'log', 'point', 'pow', 'sqrt', 'time', 'utc']),\n    slotProps: PropTypes.object,\n    slots: PropTypes.object,\n    stroke: PropTypes.string,\n    tickFontSize: PropTypes.number,\n    tickMaxStep: PropTypes.number,\n    tickMinStep: PropTypes.number,\n    tickNumber: PropTypes.number,\n    tickSize: PropTypes.number,\n    valueFormatter: PropTypes.func\n  })),\n  yAxis: PropTypes.arrayOf(PropTypes.shape({\n    axisId: PropTypes.string,\n    classes: PropTypes.object,\n    data: PropTypes.array,\n    dataKey: PropTypes.string,\n    disableLine: PropTypes.bool,\n    disableTicks: PropTypes.bool,\n    fill: PropTypes.string,\n    hideTooltip: PropTypes.bool,\n    id: PropTypes.string,\n    label: PropTypes.string,\n    labelFontSize: PropTypes.number,\n    max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    position: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n    scaleType: PropTypes.oneOf(['band', 'linear', 'log', 'point', 'pow', 'sqrt', 'time', 'utc']),\n    slotProps: PropTypes.object,\n    slots: PropTypes.object,\n    stroke: PropTypes.string,\n    tickFontSize: PropTypes.number,\n    tickMaxStep: PropTypes.number,\n    tickMinStep: PropTypes.number,\n    tickNumber: PropTypes.number,\n    tickSize: PropTypes.number,\n    valueFormatter: PropTypes.func\n  }))\n} : void 0;\nexport { CartesianContextProvider };","map":{"version":3,"names":["_extends","React","scaleBand","scalePoint","PropTypes","getExtremumX","getBarExtremumX","getExtremumY","getBarExtremumY","getScatterExtremumX","getScatterExtremumY","getLineExtremumX","getLineExtremumY","isBandScaleConfig","isPointScaleConfig","getScale","DrawingContext","SeriesContext","DEFAULT_X_AXIS_KEY","DEFAULT_Y_AXIS_KEY","getTicksNumber","jsx","_jsx","DEFAULT_CATEGORY_GAP_RATIO","DEFAULT_BAR_GAP_RATIO","xExtremumGetters","bar","scatter","line","yExtremumGetters","CartesianContext","createContext","xAxis","yAxis","xAxisIds","yAxisIds","CartesianContextProvider","inXAxis","inYAxis","dataset","children","formattedSeries","useContext","drawingArea","useMemo","map","axisConfig","dataKey","undefined","data","Error","d","value","_xAxis$map","_yAxis$map","axisExtremumCallback","acc","chartType","axis","getters","isDefaultAxis","_ref","_formattedSeries$char","getter","series","minChartTypeData","maxChartTypeData","minData","maxData","Math","min","max","getAxisExtremum","charTypes","Object","keys","reduce","charType","allXAxis","index","id","findIndex","scaleType","completedXAxis","forEach","axisIndex","_axis$scaleType","_axis$min","_axis$max","_axis$min2","_axis$max2","range","left","width","_axis$categoryGapRati","_axis$barGapRatio","categoryGapRatio","barGapRatio","scale","paddingInner","paddingOuter","ticksNumber","length","extremums","domain","niceScale","nice","niceDomain","allYAxis","completedYAxis","_axis$scaleType2","_axis$min3","_axis$max3","_axis$min4","_axis$max4","top","height","_axis$categoryGapRati2","Provider","process","env","NODE_ENV","propTypes","node","arrayOf","object","shape","axisId","string","classes","array","disableLine","bool","disableTicks","fill","hideTooltip","label","labelFontSize","number","oneOfType","instanceOf","Date","position","oneOf","slotProps","slots","stroke","tickFontSize","tickMaxStep","tickMinStep","tickNumber","tickSize","valueFormatter","func"],"sources":["/Users/suprimpoudel/WebstormProjects/bus_buddy_web/node_modules/@mui/x-charts/esm/context/CartesianContextProvider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { scaleBand, scalePoint } from 'd3-scale';\nimport PropTypes from 'prop-types';\nimport { getExtremumX as getBarExtremumX, getExtremumY as getBarExtremumY } from '../BarChart/extremums';\nimport { getExtremumX as getScatterExtremumX, getExtremumY as getScatterExtremumY } from '../ScatterChart/extremums';\nimport { getExtremumX as getLineExtremumX, getExtremumY as getLineExtremumY } from '../LineChart/extremums';\nimport { isBandScaleConfig, isPointScaleConfig } from '../models/axis';\nimport { getScale } from '../internals/getScale';\nimport { DrawingContext } from './DrawingProvider';\nimport { SeriesContext } from './SeriesContextProvider';\nimport { DEFAULT_X_AXIS_KEY, DEFAULT_Y_AXIS_KEY } from '../constants';\nimport { getTicksNumber } from '../hooks/useTicks';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEFAULT_CATEGORY_GAP_RATIO = 0.2;\nconst DEFAULT_BAR_GAP_RATIO = 0.1;\n\n// TODO: those might be better placed in a distinct file\nconst xExtremumGetters = {\n  bar: getBarExtremumX,\n  scatter: getScatterExtremumX,\n  line: getLineExtremumX\n};\nconst yExtremumGetters = {\n  bar: getBarExtremumY,\n  scatter: getScatterExtremumY,\n  line: getLineExtremumY\n};\nexport const CartesianContext = /*#__PURE__*/React.createContext({\n  xAxis: {},\n  yAxis: {},\n  xAxisIds: [],\n  yAxisIds: []\n});\nfunction CartesianContextProvider({\n  xAxis: inXAxis,\n  yAxis: inYAxis,\n  dataset,\n  children\n}) {\n  const formattedSeries = React.useContext(SeriesContext);\n  const drawingArea = React.useContext(DrawingContext);\n  const xAxis = React.useMemo(() => inXAxis == null ? void 0 : inXAxis.map(axisConfig => {\n    const dataKey = axisConfig.dataKey;\n    if (dataKey === undefined || axisConfig.data !== undefined) {\n      return axisConfig;\n    }\n    if (dataset === undefined) {\n      throw Error('MUI: x-axis uses `dataKey` but no `dataset` is provided.');\n    }\n    return _extends({}, axisConfig, {\n      data: dataset.map(d => d[dataKey])\n    });\n  }), [inXAxis, dataset]);\n  const yAxis = React.useMemo(() => inYAxis == null ? void 0 : inYAxis.map(axisConfig => {\n    const dataKey = axisConfig.dataKey;\n    if (dataKey === undefined || axisConfig.data !== undefined) {\n      return axisConfig;\n    }\n    if (dataset === undefined) {\n      throw Error('MUI: y-axis uses `dataKey` but no `dataset` is provided.');\n    }\n    return _extends({}, axisConfig, {\n      data: dataset.map(d => d[dataKey])\n    });\n  }), [inYAxis, dataset]);\n  const value = React.useMemo(() => {\n    var _xAxis$map, _yAxis$map;\n    const axisExtremumCallback = (acc, chartType, axis, getters, isDefaultAxis) => {\n      var _ref, _formattedSeries$char;\n      const getter = getters[chartType];\n      const series = (_ref = (_formattedSeries$char = formattedSeries[chartType]) == null ? void 0 : _formattedSeries$char.series) != null ? _ref : {};\n      const [minChartTypeData, maxChartTypeData] = getter({\n        series,\n        axis,\n        isDefaultAxis\n      });\n      const [minData, maxData] = acc;\n      if (minData === null || maxData === null) {\n        return [minChartTypeData, maxChartTypeData];\n      }\n      if (minChartTypeData === null || maxChartTypeData === null) {\n        return [minData, maxData];\n      }\n      return [Math.min(minChartTypeData, minData), Math.max(maxChartTypeData, maxData)];\n    };\n    const getAxisExtremum = (axis, getters, isDefaultAxis) => {\n      const charTypes = Object.keys(getters);\n      return charTypes.reduce((acc, charType) => axisExtremumCallback(acc, charType, axis, getters, isDefaultAxis), [null, null]);\n    };\n    const allXAxis = [...((_xAxis$map = xAxis == null ? void 0 : xAxis.map((axis, index) => _extends({\n      id: `deaultized-x-axis-${index}`\n    }, axis))) != null ? _xAxis$map : []),\n    // Allows to specify an axis with id=DEFAULT_X_AXIS_KEY\n    ...(xAxis === undefined || xAxis.findIndex(({\n      id\n    }) => id === DEFAULT_X_AXIS_KEY) === -1 ? [{\n      id: DEFAULT_X_AXIS_KEY,\n      scaleType: 'linear'\n    }] : [])];\n    const completedXAxis = {};\n    allXAxis.forEach((axis, axisIndex) => {\n      var _axis$scaleType, _axis$min, _axis$max, _axis$min2, _axis$max2;\n      const isDefaultAxis = axisIndex === 0;\n      const [minData, maxData] = getAxisExtremum(axis, xExtremumGetters, isDefaultAxis);\n      const range = [drawingArea.left, drawingArea.left + drawingArea.width];\n      if (isBandScaleConfig(axis)) {\n        var _axis$categoryGapRati, _axis$barGapRatio;\n        const categoryGapRatio = (_axis$categoryGapRati = axis.categoryGapRatio) != null ? _axis$categoryGapRati : DEFAULT_CATEGORY_GAP_RATIO;\n        const barGapRatio = (_axis$barGapRatio = axis.barGapRatio) != null ? _axis$barGapRatio : DEFAULT_BAR_GAP_RATIO;\n        completedXAxis[axis.id] = _extends({\n          categoryGapRatio,\n          barGapRatio\n        }, axis, {\n          scale: scaleBand(axis.data, range).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n          ticksNumber: axis.data.length\n        });\n      }\n      if (isPointScaleConfig(axis)) {\n        completedXAxis[axis.id] = _extends({}, axis, {\n          scale: scalePoint(axis.data, range),\n          ticksNumber: axis.data.length\n        });\n      }\n      if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n        // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n        return;\n      }\n      const scaleType = (_axis$scaleType = axis.scaleType) != null ? _axis$scaleType : 'linear';\n      const extremums = [(_axis$min = axis.min) != null ? _axis$min : minData, (_axis$max = axis.max) != null ? _axis$max : maxData];\n      const ticksNumber = getTicksNumber(_extends({}, axis, {\n        range,\n        domain: extremums\n      }));\n      const niceScale = getScale(scaleType, extremums, range).nice(ticksNumber);\n      const niceDomain = niceScale.domain();\n      const domain = [(_axis$min2 = axis.min) != null ? _axis$min2 : niceDomain[0], (_axis$max2 = axis.max) != null ? _axis$max2 : niceDomain[1]];\n      completedXAxis[axis.id] = _extends({}, axis, {\n        scaleType,\n        scale: niceScale.domain(domain),\n        ticksNumber\n      });\n    });\n    const allYAxis = [...((_yAxis$map = yAxis == null ? void 0 : yAxis.map((axis, index) => _extends({\n      id: `deaultized-y-axis-${index}`\n    }, axis))) != null ? _yAxis$map : []), ...(yAxis === undefined || yAxis.findIndex(({\n      id\n    }) => id === DEFAULT_Y_AXIS_KEY) === -1 ? [{\n      id: DEFAULT_Y_AXIS_KEY,\n      scaleType: 'linear'\n    }] : [])];\n    const completedYAxis = {};\n    allYAxis.forEach((axis, axisIndex) => {\n      var _axis$scaleType2, _axis$min3, _axis$max3, _axis$min4, _axis$max4;\n      const isDefaultAxis = axisIndex === 0;\n      const [minData, maxData] = getAxisExtremum(axis, yExtremumGetters, isDefaultAxis);\n      const range = [drawingArea.top + drawingArea.height, drawingArea.top];\n      if (isBandScaleConfig(axis)) {\n        var _axis$categoryGapRati2;\n        const categoryGapRatio = (_axis$categoryGapRati2 = axis.categoryGapRatio) != null ? _axis$categoryGapRati2 : DEFAULT_CATEGORY_GAP_RATIO;\n        completedYAxis[axis.id] = _extends({\n          categoryGapRatio,\n          barGapRatio: 0\n        }, axis, {\n          scale: scaleBand(axis.data, [range[1], range[0]]).paddingInner(categoryGapRatio).paddingOuter(categoryGapRatio / 2),\n          ticksNumber: axis.data.length\n        });\n      }\n      if (isPointScaleConfig(axis)) {\n        completedYAxis[axis.id] = _extends({}, axis, {\n          scale: scalePoint(axis.data, [range[1], range[0]]),\n          ticksNumber: axis.data.length\n        });\n      }\n      if (axis.scaleType === 'band' || axis.scaleType === 'point') {\n        // Could be merged with the two previous \"if conditions\" but then TS does not get that `axis.scaleType` can't be `band` or `point`.\n        return;\n      }\n      const scaleType = (_axis$scaleType2 = axis.scaleType) != null ? _axis$scaleType2 : 'linear';\n      const extremums = [(_axis$min3 = axis.min) != null ? _axis$min3 : minData, (_axis$max3 = axis.max) != null ? _axis$max3 : maxData];\n      const ticksNumber = getTicksNumber(_extends({}, axis, {\n        range,\n        domain: extremums\n      }));\n      const niceScale = getScale(scaleType, extremums, range).nice(ticksNumber);\n      const niceDomain = niceScale.domain();\n      const domain = [(_axis$min4 = axis.min) != null ? _axis$min4 : niceDomain[0], (_axis$max4 = axis.max) != null ? _axis$max4 : niceDomain[1]];\n      completedYAxis[axis.id] = _extends({}, axis, {\n        scaleType,\n        scale: niceScale.domain(domain),\n        ticksNumber\n      });\n    });\n    return {\n      xAxis: completedXAxis,\n      yAxis: completedYAxis,\n      xAxisIds: allXAxis.map(({\n        id\n      }) => id),\n      yAxisIds: allYAxis.map(({\n        id\n      }) => id)\n    };\n  }, [drawingArea.height, drawingArea.left, drawingArea.top, drawingArea.width, formattedSeries, xAxis, yAxis]);\n\n  // @ts-ignore\n  return /*#__PURE__*/_jsx(CartesianContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CartesianContextProvider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  dataset: PropTypes.arrayOf(PropTypes.object),\n  xAxis: PropTypes.arrayOf(PropTypes.shape({\n    axisId: PropTypes.string,\n    classes: PropTypes.object,\n    data: PropTypes.array,\n    dataKey: PropTypes.string,\n    disableLine: PropTypes.bool,\n    disableTicks: PropTypes.bool,\n    fill: PropTypes.string,\n    hideTooltip: PropTypes.bool,\n    id: PropTypes.string,\n    label: PropTypes.string,\n    labelFontSize: PropTypes.number,\n    max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    position: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n    scaleType: PropTypes.oneOf(['band', 'linear', 'log', 'point', 'pow', 'sqrt', 'time', 'utc']),\n    slotProps: PropTypes.object,\n    slots: PropTypes.object,\n    stroke: PropTypes.string,\n    tickFontSize: PropTypes.number,\n    tickMaxStep: PropTypes.number,\n    tickMinStep: PropTypes.number,\n    tickNumber: PropTypes.number,\n    tickSize: PropTypes.number,\n    valueFormatter: PropTypes.func\n  })),\n  yAxis: PropTypes.arrayOf(PropTypes.shape({\n    axisId: PropTypes.string,\n    classes: PropTypes.object,\n    data: PropTypes.array,\n    dataKey: PropTypes.string,\n    disableLine: PropTypes.bool,\n    disableTicks: PropTypes.bool,\n    fill: PropTypes.string,\n    hideTooltip: PropTypes.bool,\n    id: PropTypes.string,\n    label: PropTypes.string,\n    labelFontSize: PropTypes.number,\n    max: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    min: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number]),\n    position: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n    scaleType: PropTypes.oneOf(['band', 'linear', 'log', 'point', 'pow', 'sqrt', 'time', 'utc']),\n    slotProps: PropTypes.object,\n    slots: PropTypes.object,\n    stroke: PropTypes.string,\n    tickFontSize: PropTypes.number,\n    tickMaxStep: PropTypes.number,\n    tickMinStep: PropTypes.number,\n    tickNumber: PropTypes.number,\n    tickSize: PropTypes.number,\n    valueFormatter: PropTypes.func\n  }))\n} : void 0;\nexport { CartesianContextProvider };"],"mappings":"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"},"metadata":{},"sourceType":"module"}