{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { stack as d3Stack } from 'd3-shape';\nimport { getStackingGroups } from '../internals/stackSeries';\nimport defaultizeValueFormatter from '../internals/defaultizeValueFormatter';\n\nconst formatter = (params, dataset) => {\n  const {\n    seriesOrder,\n    series\n  } = params;\n  const stackingGroups = getStackingGroups(params); // Create a data set with format adapted to d3\n\n  const d3Dataset = dataset != null ? dataset : [];\n  seriesOrder.forEach(id => {\n    const data = series[id].data;\n\n    if (data !== undefined) {\n      data.forEach((value, index) => {\n        if (d3Dataset.length <= index) {\n          d3Dataset.push({\n            [id]: value\n          });\n        } else {\n          d3Dataset[index][id] = value;\n        }\n      });\n    } else if (dataset === undefined) {\n      throw new Error([`MUI: bar series with id='${id}' has no data.`, 'Either provide a data property to the series or use the dataset prop.'].join('\\n'));\n    }\n  });\n  const completedSeries = {};\n  stackingGroups.forEach(stackingGroup => {\n    const {\n      ids,\n      stackingOffset,\n      stackingOrder\n    } = stackingGroup; // Get stacked values, and derive the domain\n\n    const stackedSeries = d3Stack().keys(ids.map(id => {\n      // Use dataKey if needed and available\n      const dataKey = series[id].dataKey;\n      return series[id].data === undefined && dataKey !== undefined ? dataKey : id;\n    })).order(stackingOrder).offset(stackingOffset)(d3Dataset);\n    ids.forEach((id, index) => {\n      const dataKey = series[id].dataKey;\n      completedSeries[id] = _extends({\n        layout: 'vertical'\n      }, series[id], {\n        data: dataKey ? dataset.map(d => d[dataKey]) : series[id].data,\n        stackedData: stackedSeries[index].map(([a, b]) => [a, b])\n      });\n    });\n  });\n  return {\n    seriesOrder,\n    stackingGroups,\n    series: defaultizeValueFormatter(completedSeries, v => v.toLocaleString())\n  };\n};\n\nexport default formatter;","map":{"version":3,"names":["_extends","stack","d3Stack","getStackingGroups","defaultizeValueFormatter","formatter","params","dataset","seriesOrder","series","stackingGroups","d3Dataset","forEach","id","data","undefined","value","index","length","push","Error","join","completedSeries","stackingGroup","ids","stackingOffset","stackingOrder","stackedSeries","keys","map","dataKey","order","offset","layout","d","stackedData","a","b","v","toLocaleString"],"sources":["/Users/suprimpoudel/WebstormProjects/bus_buddy_web/node_modules/@mui/x-charts/esm/BarChart/formatter.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { stack as d3Stack } from 'd3-shape';\nimport { getStackingGroups } from '../internals/stackSeries';\nimport defaultizeValueFormatter from '../internals/defaultizeValueFormatter';\nconst formatter = (params, dataset) => {\n  const {\n    seriesOrder,\n    series\n  } = params;\n  const stackingGroups = getStackingGroups(params);\n\n  // Create a data set with format adapted to d3\n  const d3Dataset = dataset != null ? dataset : [];\n  seriesOrder.forEach(id => {\n    const data = series[id].data;\n    if (data !== undefined) {\n      data.forEach((value, index) => {\n        if (d3Dataset.length <= index) {\n          d3Dataset.push({\n            [id]: value\n          });\n        } else {\n          d3Dataset[index][id] = value;\n        }\n      });\n    } else if (dataset === undefined) {\n      throw new Error([`MUI: bar series with id='${id}' has no data.`, 'Either provide a data property to the series or use the dataset prop.'].join('\\n'));\n    }\n  });\n  const completedSeries = {};\n  stackingGroups.forEach(stackingGroup => {\n    const {\n      ids,\n      stackingOffset,\n      stackingOrder\n    } = stackingGroup;\n    // Get stacked values, and derive the domain\n    const stackedSeries = d3Stack().keys(ids.map(id => {\n      // Use dataKey if needed and available\n      const dataKey = series[id].dataKey;\n      return series[id].data === undefined && dataKey !== undefined ? dataKey : id;\n    })).order(stackingOrder).offset(stackingOffset)(d3Dataset);\n    ids.forEach((id, index) => {\n      const dataKey = series[id].dataKey;\n      completedSeries[id] = _extends({\n        layout: 'vertical'\n      }, series[id], {\n        data: dataKey ? dataset.map(d => d[dataKey]) : series[id].data,\n        stackedData: stackedSeries[index].map(([a, b]) => [a, b])\n      });\n    });\n  });\n  return {\n    seriesOrder,\n    stackingGroups,\n    series: defaultizeValueFormatter(completedSeries, v => v.toLocaleString())\n  };\n};\nexport default formatter;"],"mappings":"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"},"metadata":{},"sourceType":"module"}